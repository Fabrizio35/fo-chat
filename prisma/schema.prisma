// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  birthdate DateTime

  sentRequests     ChatRequest[]     @relation("SenderRequests")
  receivedRequests ChatRequest[]     @relation("ReceiverRequests")
  chats            ChatParticipant[]
  messages         Message[]         @relation("AuthorMessages")
}

model ChatRequest {
  id         String        @id @default(uuid())
  senderId   String
  receiverId String
  status     RequestStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  sender   User @relation("SenderRequests", fields: [senderId], references: [id])
  receiver User @relation("ReceiverRequests", fields: [receiverId], references: [id])
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model Chat {
  id           String            @id @default(uuid())
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  participants ChatParticipant[]
  messages     Message[]
}

model ChatParticipant {
  id     String @id @default(uuid())
  chatId String
  userId String

  chat Chat @relation(fields: [chatId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Message {
  id        String   @id @default(uuid())
  chatId    String
  authorId  String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chat   Chat @relation(fields: [chatId], references: [id])
  author User @relation("AuthorMessages", fields: [authorId], references: [id])
}
